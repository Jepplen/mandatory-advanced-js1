import React from "react";

// isEmojiOrLink(), TAR EN STR√ÑNG AV ETT ORD OCH TESTAR MOT REGEXP F√ñR ATT SE
// OM DEN INNEH√ÖLLER EN EMOJI ELLER EN L√ÑNK ELLER INGET AV DET.
// RETURNAR TRUE VID TR√ÑFF AV EMOJI ELLER L√ÑNK
function isEmojiOrLink(str) {
  if (/^:smile:|:big-smile:|:tongue:|:\)|:D|:p|:P$/.test(str)) {
    return "isEmoji";
  } else if (/^(https?|www)/.test(str)) {
    return "isLink";
  }
}

// EmojisOrLinks(), TAR PROPS FR√ÖN ChatBoard.js SOM ARGUMENT
// OCH TESTAR INNEH√ÖLLET AV <EmojisOrLinks></EmojisOrLinks> I ChatBoard.js
// OM DET INNEH√ÖLLER EVENTUELL EMOJI ELLER L√ÑNK.
// RETURNERAR HELA INNEH√ÖLLET SOM EN STR√ÑNG
function EmojisOrLinks(props) {
  let _blank = "_blank";
  let content = props.children.split(" ").map((word, index) => {
    if (isEmojiOrLink(word) === "isEmoji") {
      if (word === ":smile:" || word === ":)") {
        return <span key={index} role="img" aria-label="smile">üôÇ</span>
      } else if (word === ":big-smile:" || word === ":D") {
          return <span key={index} role="img" aria-label="big-smile">üòÉ</span>
      } else if (word === ":tongue:" || word === ":p" || word === ":P") {
          return <span key={index} role="img" aria-label="tongue">üòù</span>
      }
    } else if (isEmojiOrLink(word) === "isLink") {
      return <a target={_blank} key={index} href={word}> {word} </a>
    }
    return " " + word + " ";
  });
  return <>{content}</>
}

export default EmojisOrLinks;
